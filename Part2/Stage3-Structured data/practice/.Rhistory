# ******* important!! for numbers, 0 means False, Non-zero means True whether it is 1, 100 or -499.
1 & 3 ; 0 | 3 ; 'a' & 'b'
# & or &&
#     and : & is for one data to another, && is for one group to another
#     ex. c('a','b') & c ('a', 'c'): T, F   vs.  c('a','b') && c('a', 'c'): F
# | -> or : just like any other 'or'
# ******* important!! for numbers, 0 means False, Non-zero means True whether it is 1, 100 or -499.
1 & 3 ; 0 | 3 ; 'a' && 'b'
# & or &&
#     and : & is for one data to another, && is for one group to another
#     ex. c('a','b') & c ('a', 'c'): T, F   vs.  c('a','b') && c('a', 'c'): F
# | -> or : just like any other 'or'
# ******* important!! for numbers, 0 means False, Non-zero means True whether it is 1, 100 or -499.
1 & 3 ; 0 | 3
# & or &&
#     and : & is for one data to another, && is for one group to another
#     ex. c('a','b') & c ('a', 'c'): T, F   vs.  c('a','b') && c('a', 'c'): F
# | -> or : just like any other 'or'
# ******* important!! for numbers, 0 means False, Non-zero means True whether it is 1, 100 or -499.
1 & 3 ; 0 & 3;  0 | 3
c(1,4) & c(1,5)
c(1,4) & c(1,5) ; c(0,3) & c(1,0)
c('a','b') & c(1, 'b') ; c('a','b') && c('a','c')
c('a','b') && c('a','c')
c('a','b') | c('b')
c(1,2) | c(1)
c(1,2) | c(0)
class (NA) ; class (NULL)
# class (..) -> returns the data type (class) of the given data
class ('a') ; class (1) ; class (T) ; class (1 & 8)
class (NA) ; class (NULL)
txt1
factor1 <- factor(txt1$no)
factor1 <- factor(txt1$no) ; factor1
class (factor1)
summary (factor1)
factor2 <- factor(txt1 $blood)
factor2 <- factor(txt1$blood) ; factor2
factor2 <- factor(txt1$sex) ; factor2
summary1 <- summary(factor2)
summary1 <- summary(factor2) ; summary1
# Date & Time
# In R, original format of date & time is 'yr-mon-date' & 'hr-min-sec time zone'
Sys. Date() ; Sys.time() #prints
# Date & Time
# In R, original format of date & time is 'yr-mon-date' & 'hr-min-sec time zone'
Sys.Date() ; Sys.time() #prints
date()
# class of Date data is just date
class(Sys.Date())
# If you type in the date like "2019-05-30", it is "" -> character class
class ("2019-06-09")
library(dplyr)
install.packages(dplyr)
install.packages(dplyr)
install.packages(ggplot2)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("ggplot2")
library (ggplot2)
library (dplyr)
install.packages("dplyr")
install.packages("ggplot2")
library (ggplot2)
library (dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("ggplot2")
library (ggplot2)
library (dplyr)
mpg
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(colour = 'blue') +
labs(title = "Hwy vs. Cty") +
theme_bw () +
theme(panel.grid.major.x = element_line(colour='grey'),
panel.grid.major.y = element_line(colour='grey'),
panel.grid.minor.x = element_blank())
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=3, colour='blue')+
labs(title = "Hwy vs. Cty") +
theme_bw ()
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=3, colour='blue')+
labs(title = "Relationship between Hwy (고속도로연비) and Cty (도시연비)_MPG") +
theme_bw ()
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=3, colour='blue')+
labs(title = "Relationship between Hwy (고속도로연비) and Cty (도시연비)_MPG") +
xlim(0,40)+
theme_bw ()
midwest_1 <- midwest %>%
filter (poptotal <= 500000 ) %>%
filter(popasian <= 10000) ;  midwest_1
midwest_1 <- midwest %>%
filter (poptotal <= 500000 && popasian <= 10000)
options (scipen = 10)
ggplot(midwest_1, aes(x=poptotal, y=popasian)) +
geom_point(colour = 'blue') +
labs(title = "Asian Population vs. Total Population in Midwest") +
theme_bw () +
theme(panel.grid.major.x = element_line(colour='grey'),
panel.grid.major.y = element_line(colour='grey'),
panel.grid.minor.x = element_blank())
midwest_1 <- midwest %>%
filter (poptotal <= 500000 && popasian <= 10000)
midwest_1 <- midwest %>%
filter (popasian <= 10000 && poptotal <= 500000)
options (scipen = 10)
ggplot(midwest_1, aes(x=poptotal, y=popasian)) +
geom_point(colour = 'blue') +
labs(title = "Asian Population vs. Total Population in Midwest") +
theme_bw () +
theme(panel.grid.major.x = element_line(colour='grey'),
panel.grid.major.y = element_line(colour='grey'),
panel.grid.minor.x = element_blank())
```{r}
midwest_1 <- midwest %>%
filter (popasian <= 10000
&& poptotal <= 500000)
options (scipen = 10)
ggplot(midwest_1, aes(x=poptotal, y=popasian)) +
geom_point(colour = 'blue') +
labs(title = "Asian Population vs. Total Population in Midwest") +
theme_bw () +
theme(panel.grid.major.x = element_line(colour='grey'),
panel.grid.major.y = element_line(colour='grey'),
panel.grid.minor.x = element_blank())
midwest_1 <- midwest %>%
filter (popasian <= 10000) %>%
filter (poptotal <= 500000)
options (scipen = 10)
ggplot(midwest_1, aes(x=poptotal, y=popasian)) +
geom_point(colour = 'blue') +
labs(title = "Asian Population vs. Total Population in Midwest") +
theme_bw () +
theme(panel.grid.major.x = element_line(colour='grey'),
panel.grid.major.y = element_line(colour='grey'),
panel.grid.minor.x = element_blank())
ggplot(midwest_1, aes(x=poptotal, y=popasian)) +
geom_point(colour = 'darkblue') +
labs(title = "Asian Population vs. Total Population in Midwest") +
theme_bw () +
theme(panel.grid.major.x = element_line(colour='grey'),
panel.grid.major.y = element_line(colour='grey'),
panel.grid.minor.x = element_blank())
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=1, colour='darkpurple')+
labs(title = "Relationship between Hwy (고속도로연비) and Cty (도시연비)_MPG") +
xlim(0,40)+
theme_bw ()
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=1, colour='darkorchid')+
labs(title = "Relationship between Hwy (고속도로연비) and Cty (도시연비)_MPG") +
xlim(0,40)+
theme_bw ()
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=1, colour='darkorchid')+
labs(title = "Relationship between Hwy (고속도로연비) and Cty (도시연비)_MPG") +
theme_bw ()
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=1, colour='darkgreen')+
labs(title = "Relationship between Hwy (고속도로연비) and Cty (도시연비)_MPG") +
theme_bw ()
ggplot(midwest_1, aes(x=poptotal, y=popasian)) +
geom_point(colour = 'darkblue') +
labs(title = "Asian Population vs. Total Population in Midwest", size=10) +
theme_bw () +
theme(panel.grid.major.x = element_line(colour='grey'),
panel.grid.major.y = element_line(colour='grey'),
panel.grid.minor.x = element_blank())
ggplot(mpg, aes(x=cty, y=hwy)) +
geom_point(size=1, colour='darkgreen')+
labs(title = "MPG _ Hwy (고속도로연비) vs. Cty (도시연비)", size = 14) +
theme_bw ()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(sqldf)
install.packages("sqldf")
library(sqldf)
library(dplyr)
library(ggplot2)
library(sqldf)
suv <- mpg %>%
group_by(manufacturer)  %>%
filter (class == 'suv') %>%
summarise (mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
suv_1 <- sqldf("select manufacturer, avg(cty) as Avg_cty from mpg
group by manufacturer
order by avg(cty) desc
limit 0,5")
ggplot(suv_1, aes(x= reorder(manufacturer, -Avg_cty), y=Avg_cty, fill = manufacturer)) +
geom_bar(stat='identity') +
ylim (0, 30) +
ggtitle("Avg cty of suv comparison for top 5 manufacturers ")
suv <- mpg %>%
group_by(manufacturer)  %>%
filter (class == 'suv') %>%
summarise (mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
suv_1 <- sqldf("select manufacturer, avg(cty) as Avg_cty from mpg
group by manufacturer
order by avg(cty) desc
limit 0,5")
ggplot(suv_1, aes(x= reorder(manufacturer, -Avg_cty), y=Avg_cty, fill = manufacturer)) +
geom_bar(stat='identity') +
ggtitle("Avg Cty of SUV for top 5 manufacturers ")
ggplot(suv_1, aes(x= reorder(manufacturer, -Avg_cty), y=Avg_cty, fill = manufacturer)) +
geom_bar(stat='identity') +
ggtitle("Avg Cty of SUV for top 5 manufacturers", size=14)
ggplot(suv_1, aes(x= reorder(manufacturer, -Avg_cty), y=Avg_cty, fill = manufacturer)) +
geom_bar(stat='identity') +
ggtitle("Avg Cty of SUV for top 5 manufacturers", size=14)
suv <- mpg %>%
group_by(manufacturer)  %>%
filter (class == 'suv') %>%
summarise (mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
suv_1 <- sqldf("select manufacturer, avg(cty) as Avg_cty from mpg
group by manufacturer
order by avg(cty) desc
limit 0,5")
ggplot(suv_1, aes(x= reorder(manufacturer, -Avg_cty), y=Avg_cty, fill = manufacturer)) +
geom_bar(stat='identity') +
ggtitle("Avg Cty of SUV for top 5 manufacturers", size=14)
ggplot(suv_1, aes(x= reorder(manufacturer, -Avg_cty), y=Avg_cty, fill = manufacturer)) +
geom_bar(stat='identity') +
ggtitle("Avg Cty of SUV for top 5 manufacturers")
class_fq <- sqldf("select class, count(*) as frequency from mpg
group by class
order by count(class) desc")
class_fq
ggplot(class_fq, aes(x= reorder(class, -frequency), y=frequency)) +
geom_bar(stat='identity', fill = 'cyan', alpha = 0.6) +
ggtitle("Avg cty of suv comparison for top 5 manufacturers ") +
theme(axis.text.x = element_text(angle=135, hjust=1, vjust=1,
color='black', size=5))
#### actually, System gives you count automatically lol
ggplot(mpg, aes(x=class, fill=class)) +
geom_bar()
ggplot(df_suv, aes(x=reorder(manufacturer, -mean_cty), y=mean_cty,
fill=manufacturer)) +
geom_col()
suv <- mpg %>%
group_by(manufacturer)  %>%
filter (class == 'suv') %>%
summarise (mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
suv_1 <- sqldf("select manufacturer, avg(cty) as Avg_cty from mpg
group by manufacturer
order by avg(cty) desc
limit 0,5")
ggplot(suv_1, aes(x= reorder(manufacturer, -Avg_cty), y=Avg_cty, fill = manufacturer)) +
geom_bar(stat='identity') +
ggtitle("Avg Cty of SUV for top 5 manufacturers")
ggplot(suv, aes(x=reorder(manufacturer, -mean_cty), y=mean_cty,
fill=manufacturer)) +
geom_col()
ggplot(suv, aes(x=reorder(manufacturer, -mean_cty), y=mean_cty,
fill=manufacturer)) +
geom_col()+
ggtitle("Avg Cty of SUV for top 5 manufacturers")
suv <- mpg %>%
group_by(manufacturer)  %>%
filter (class == 'suv') %>%
summarise (mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
suv_1 <- sqldf("select manufacturer, avg(cty) as Avg_cty from mpg
group by manufacturer
order by avg(cty) desc
limit 0,5")
ggplot(suv_1, aes(x= reorder(manufacturer, -Avg_cty), y=Avg_cty, fill = manufacturer)) +
geom_bar(stat='identity') +
ggtitle("Avg Cty of SUV for top 5 manufacturers")
ggplot(suv, aes(x=reorder(manufacturer, -mean_cty), y=mean_cty,
fill=manufacturer)) +
geom_col()+
ggtitle("Avg Cty of SUV for top 5 manufacturers")
ggplot(suv, aes(x=reorder(manufacturer, -mean_cty), y=mean_cty,
fill=manufacturer)) +
geom_col()+
ggtitle("Avg Cty of SUV for top 5 manufacturers")
suv <- mpg %>%
group_by(manufacturer)  %>%
filter (class == 'suv') %>%
summarise (mean_cty = mean(cty)) %>%
arrange(desc(mean_cty)) %>%
head(5)
suv_1 <- sqldf("select manufacturer, avg(cty) as Avg_cty from mpg
group by manufacturer
order by avg(cty) desc
limit 0,5")
diamonds
ggplot(diamonds, aes(x=cut, y=clarity)) +
geom_col()
```{r diamonds}
ggplot(diamonds, aes(x=cut, y=clarity)) +
geom_col()
ggplot(diamonds, aes(x=cut, y=clarity)) +
geom_col(colour=rainbow(5))
ggplot(diamonds, aes(x=cut, y=clarity)) +
geom_col(colour='red', alpha=0.5)
ggplot(diamonds, aes(x=cut, y=clarity)) +
geom_col(colour='red', alpha=0.3) +
theme_bw()
ggplot(diamonds, aes(x=cut, y=clarity)) +
geom_col(colour='coral', alpha=0.3) +
theme_bw()
price_mean <- mean(diamonds$price)
ggplot(dia1, aes(x=cut, y=price)) +
geom_col()
dia1 <-diamonds %>%
group_by (cut) %>%
summarise(mean_price = mean(price))
ggplot(dia1, aes(x=cut, y=price)) +
geom_col()
ggplot(dia1, aes(x=cut, y=mean_price)) +
geom_col()
ggplot(dia1, aes(x=cut, y=mean_price), fill=cut) +
geom_col()
ggplot(dia1, aes(x=cut, y=mean_price, fill=cut)) +
geom_col()
ggplot(diamonds, aes(x=cut, y=clarity, fill=cut)) +
theme_bw()
ggplot(diamonds, aes(x=cut, fill=cut)) +
theme_bw()
ggplot(diamonds, aes(x=cut, fill=cut)) +
theme_bw()
ggplot(diamonds, aes(x=cut, y=clarity, fill=cut)) +
geom_col() +
theme_bw()
df_color <- diamonds %>%
group_by(color) %>%
summarise(mean_price = mean(price))
gcolor <- ggplot(df_color, aes(x=color, y=mean_price, fill=color)) +
geom_col()
gcut <- ggplot(df_cut, aes(x=cut, y=mean_price, fill=cut)) +
geom_col()
library(grid)
library(gridExtra)
grid.arrange(gcut, gcolor, ncol=2, top = "cut과 color에 따른 가격의 변화")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("grid")
install.packages("gridExtra")
library(gridExtra)
install.packages("gridExtra")
install.packages("gridExtra")
library(gridExtra)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(sqldf)
install.packages("gridExtra")
install.packages("gridExtra")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(sqldf)
library(gridExtra)
setwd("D:/Workspace/R_data_analysis/temporary_R-Part2/Stage3-Structured data/practice")
mapo <- read.csv("data/마포09번이용현황.csv")
mapo$정류소명 <- paste0(1:length(mapo$정류소명),". ",mapo$정류소명)
mapo$정류소명 <- factor(mapo$정류소명, levels=unique(mapo$정류소명)) # 버스정류장 순서정하기
mapo %>%
melt(id=c("정류소명"),variable.name = "승ㆍ하차인원") %>%
ggplot(aes(x=정류소명, y=value/10000,fill=승ㆍ하차인원)) +
geom_bar(stat="identity", position = "stack") +
geom_hline(yintercept = seq(0,8,2), linetype=2,color="grey10") +
theme_bw(base_family = "jalnan", base_size = 10) +
labs(title = "마포09번 마을버스 이용 현황 분석", y="승ㆍ하차인원(만 명)") +
theme(plot.title = element_text(family = "jalnan", face="bold", hjust=0.5, size=15, color="grey20"),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90),
legend.position = "top")
# 3-7
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(dplyr)
mapo <- read.csv("data/마포09번이용현황.csv")
mapo$정류소명 <- paste0(1:length(mapo$정류소명),". ",mapo$정류소명)
mapo$정류소명 <- factor(mapo$정류소명, levels=unique(mapo$정류소명)) # 버스정류장 순서정하기
mapo %>%
melt(id=c("정류소명"),variable.name = "승ㆍ하차인원") %>%
ggplot(aes(x=정류소명, y=value/10000,fill=승ㆍ하차인원)) +
geom_bar(stat="identity", position = "stack") +
geom_hline(yintercept = seq(0,8,2), linetype=2,color="grey10") +
theme_bw(base_family = "jalnan", base_size = 10) +
labs(title = "마포09번 마을버스 이용 현황 분석", y="승ㆍ하차인원(만 명)") +
theme(plot.title = element_text(family = "jalnan", face="bold", hjust=0.5, size=15, color="grey20"),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90),
legend.position = "top")
mapo <- read.csv("마포09번이용현황.csv")
mapo$정류소명 <- paste0(1:length(mapo$정류소명),". ",mapo$정류소명)
mapo
mapo$정류소명 <- factor(mapo$정류소명, levels=unique(mapo$정류소명)) # 버스정류장 순서정하기
mapo
mapo %>%
melt(id=c("정류소명"),variable.name = "승ㆍ하차인원") %>%
ggplot(aes(x=정류소명, y=value/10000,fill=승ㆍ하차인원)) +
geom_bar(stat="identity", position = "stack") +
geom_hline(yintercept = seq(0,8,2), linetype=2,color="grey10") +
theme_bw(base_family = "jalnan", base_size = 10) +
labs(title = "마포09번 마을버스 이용 현황 분석", y="승ㆍ하차인원(만 명)") +
theme(plot.title = element_text(family = "jalnan", face="bold", hjust=0.5, size=15, color="grey20"),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90),
legend.position = "top")
library(ggplot2)
library(ggplot2)
install.packages("Reshape2")
install.packages("reshape2")
library(reshape2)
library(reshape2)
mapo %>%
melt(id=c("정류소명"),variable.name = "승ㆍ하차인원") %>%
ggplot(aes(x=정류소명, y=value/10000,fill=승ㆍ하차인원)) +
geom_bar(stat="identity", position = "stack") +
geom_hline(yintercept = seq(0,8,2), linetype=2,color="grey10") +
theme_bw(base_family = "jalnan", base_size = 10) +
labs(title = "마포09번 마을버스 이용 현황 분석", y="승ㆍ하차인원(만 명)") +
theme(plot.title = element_text(family = "jalnan", face="bold", hjust=0.5, size=15, color="grey20"),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90),
legend.position = "top")
mapo %>%
melt(id=c("정류소명"),variable.name = "승ㆍ하차인원") %>%
ggplot(aes(x=정류소명, y=value/10000,fill=승ㆍ하차인원)) +
geom_bar(stat="identity", position = "stack") +
geom_line(lty=1)+
geom_hline(yintercept = seq(0,8,2), linetype=2,color="grey10") +
theme_bw(base_family = "jalnan", base_size = 10) +
labs(title = "마포09번 마을버스 이용 현황 분석", y="승ㆍ하차인원(만 명)") +
theme(plot.title = element_text(family = "jalnan", face="bold", hjust=0.5, size=15, color="grey20"),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90),
legend.position = "top")
mapo %>%
melt(id=c("정류소명"),variable.name = "승ㆍ하차인원") %>%
ggplot(aes(x=정류소명, y=value/10000,fill=승ㆍ하차인원)) +
geom_bar(stat="identity", position = "stack") +
geom_line(lty=1, color='blue')+
geom_hline(yintercept = seq(0,8,2), linetype=2,color="grey10") +
theme_bw(base_family = "jalnan", base_size = 10) +
labs(title = "마포09번 마을버스 이용 현황 분석", y="승ㆍ하차인원(만 명)") +
theme(plot.title = element_text(family = "jalnan", face="bold", hjust=0.5, size=15, color="grey20"),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90),
legend.position = "top")
mapo %>%
melt(id=c("정류소명"),variable.name = "승ㆍ하차인원") %>%
ggplot(aes(x=정류소명, y=value/10000,fill=승ㆍ하차인원)) +
#  geom_bar(stat="identity", position = "stack") +
geom_line(lty=1, color='blue')+
geom_hline(yintercept = seq(0,8,2), linetype=2,color="grey10") +
theme_bw(base_family = "jalnan", base_size = 10) +
labs(title = "마포09번 마을버스 이용 현황 분석", y="승ㆍ하차인원(만 명)") +
theme(plot.title = element_text(family = "jalnan", face="bold", hjust=0.5, size=15, color="grey20"),
axis.title.x = element_blank(),
axis.text.x = element_text(angle = 90),
legend.position = "top")
library(reshape2)
mapo_1
mapo_1 <- mapo %>%
melt(id=c("정류소명"),variable.name = "승ㆍ하차인원")
mapo_1
mapo
ggplot(mapo_1, aes(x=정류소명, y=승*하차인원)) +
geom_bar(stat="identity")
ggplot(mapo_1, aes(x=정류소명, y=value)) +
geom_bar(stat="identity")
ggplot(mapo_1, aes(x=정류소명, y=value, fill = 승*하차인)) +
geom_bar(stat="identity")
ggplot(mapo_1, aes(x=정류소명, y=value, fill = 승*하차인원)) +
geom_bar(stat="identity")
mapo_1 <- mapo %>%
melt(id=c("정류소명"),variable.name = "승_하차인원")
ggplot(mapo_1, aes(x=정류소명, y=value, fill = 승_하차인원)) +
geom_bar(stat="identity")
ggplot(mapo_1, aes(x=정류소명, y=value, fill = 승_하차인원)) +
geom_line()
ggplot(mapo_1, aes(x=정류소명, y=value, fill = 승_하차인원)) +
geom_point()
ggplot(mapo_1, aes(x=정류소명, y=value, fill = 승_하차인원)) +
geom_point() +
geom_line()
ggplot(mapo_1, aes(x=정류소명, y=value, fill = 승_하차인원)) +
geom_point() +
geom_segment()
ggplot(mapo_1, aes(x=정류소명, y=value, fill = 승_하차인원)) +
geom_point() +
geom_segment(xend=정류소명, yend=value)
