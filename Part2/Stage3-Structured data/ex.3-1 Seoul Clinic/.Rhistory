for (i in 1:length(lst.raw)) {
x <- lst.raw[[i]]
row <- rownames(x) ; col <- colnames(x)
for (r in 1:length(row)) {
for (c in 1:length(col)) {
x[r,c] <- gsub(",", "", x[r,c])
}
}
x <- cbind(as.data.frame(sapply(x, as.numeric)))
row.names(x) <- row
x.pats <- data.frame(지역 = as.array(rownames(x), dim=c(1:17)))
x.days <- data.frame(지역 = as.array(rownames(x), dim=c(1:17)))
x.paid <- data.frame(지역 = as.array(rownames(x), dim=c(1:17)))
for (k in 1:length(col)) {
if (k %% 5 == 1) {
x.pats$disease <- rep(disease.names[i], length(row))
x.pats <- cbind.data.frame (x.pats, x[k])
} else if (k %% 5 == 2) {
x.days$disease <- rep(disease.names[i], length(row))
x.days <- cbind.data.frame (x.days, x[k])
} else if (k %% 5 == 4) {
x.paid$disease <- rep(disease.names[i], length(row))
x.paid <- cbind.data.frame (x.paid, x[k])
} else {
NULL
}
}
p.mil <- cbind(지역 = rownames(x), data.frame(matrix(nrow=nrow(x.pats), ncol=ncol(x.pats))))
colnames(p.mil) <- colnames(x.pats)
p.mil$disease <- rep(disease.names[i], nrow(p.mil))
yr <- 1
for (c.p in 3:ncol(x.pats)) {
if (c.p %% 12 == 3) {
yr <- yr+1
}
p.mil [,c.p] <- (x.pats[,c.p]/total.pop[,yr])*1000
# 보다 명확한 구분을 위해 천분율 사용
}
num.patients <- rbind.data.frame(num.patients, x.pats)
p.mil.patients <- rbind.data.frame(p.mil.patients, p.mil)
days.patients <- rbind.data.frame(days.patients, x.days)
paid <- rbind.data.frame(paid, x.paid)
}
View(pct.patients)
write.csv(num.patients, "환자수.csv")
write.csv(p.mil.patients, "발병률(천분율).csv")
write.csv(days.patients, "내원일.csv")
write.csv(paid, "요양급여비용총액.csv")
pat <- read.csv("환자수.csv", header=T)
pat$X <- NULL
str(pat)
pmil.patients <- read.csv("발병률(천분율).csv", header=T)
pmil.patients
pmil.patients$X <- NULL
pmil.pats <- read.csv("발병률(천분율).csv", header=T)
pmil.pats$X <- NULL
str(pmil.pats)
pat <- read.csv("환자수.csv", header=T)
pat$X <- NULL
str(pat)
pmil.pats <- read.csv("발병률(천분율).csv", header=T)
pmil.pats$X <- NULL
str(pmil.pats)
View(pat)
View(pmil.pats)
setwd("D:/Workspace/R_data_analysis/Part2/Stage3-Structured data")
library(ggplot2)
data1 <- read.csv("2013년_서울_주요구별_병원현황.csv")
setwd("D:/Workspace/R_data_analysis/Part2/Stage3-Structured data/ex.3-1 Seoul Clinic")
data1 <- read.csv("2013년_서울_주요구별_병원현황.csv")
data1
data1
barplot(as.matrix(data1[1:9,2:11]),
main=paste("서울시 주요구별 과목별 병원현황-2013년", "\n", "출처 "),
ylab = "병원수", beside = T, col= rainbow(8))
library(ggplot2)
library(reshape2)
install.packages('plotly')
library(reshape2)
library(plotly)
library(extrafont)
windowsFonts()
windowsFonts(malgun = "맑은 고딕")
theme_update(text = element_text(family = "malgun"))
data1 <- read.csv("2013년_서울_주요구별_병원현황.csv")
data1
barplot(as.matrix(data1[1:9,2:11]),
main=paste("서울시 주요 구별 과목별 병원현황-2013년", "\n",
"출처[국민건강보험공단]") , ylab="병원수", beside=T ,
col=rainbow(8), ylim=c(0,350))
abline(h=seq(0,350,10), lty=3, lwd=0.2)
data1
clinic <- read.csv("2013년_서울_주요구별_병원현황_Long.csv")
# Wide format을 Long format으로 변환
df_long <- melt(data1, id=c('표시과목'),
variable.name='지역명', value.name='의원수')
head(df_long)
df_long
p <- ggplot(df_long, aes(x=지역명, y=의원수, fill=표시과목)) +
geom_bar(position = 'dodge', stat = 'identity') +
geom_hline(yintercept=seq(0,330,10), lty='dotted', size=0.1) +
ggtitle(paste("서울시 주요 구별 과목별 병원현황-2013년", "\n",
"출처[국민건강보험공단]")) +
theme(plot.title = element_text(face = "bold", hjust = 0.5,
size = 15, color = "darkblue"))
# Interactive Graph
ggplotly(p)
data1
barplot(as.matrix(data1[1:9,2:11]),
main=paste("서울시 주요 구별 과목별 병원현황-2013년", "\n",
"출처[국민건강보험공단]") , ylab="병원수", beside=T ,
col=rainbow(8), ylim=c(0,350))
head(pat)
data <- data.frame(time = seq(0, 23), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
plot(extra ~ time,
data = data,
type = "l",
ylim = c(min(data[ ,-1]), max(data[ ,-1])),
ylab = "value")
data
lines(data$time, data$plus, col = "steelblue")
lines(data$time, data$noob, col = "pink")
data <- data.frame(time = rep("a", "b","c", 8), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
data <- data.frame(time = rep(c("a", "b","c"), 8), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
data
plot(extra ~ time,
data = data,
type = "l",
ylim = c(min(data[ ,-1]), max(data[ ,-1])),
ylab = "value")
lines(data$time, data$plus, col = "steelblue")
lines(data$time, data$noob, col = "pink")
data <- data.frame(time = seq(0, 23), noob = rnorm(24), plus = runif(24), extra = rpois(24, lambda = 1))
data
plot(extra ~ time,
data = data,
type = "l",
ylim = c(min(data[ ,-1]), max(data[ ,-1])),
ylab = "value")
lines(data$time, data$plus, col = "steelblue")
lines(data$time, data$noob, col = "pink")
plot(as.matrix(data1[1:9,2:11]),
main=paste("서울시 주요 구별 과목별 병원현황-2013년", "\n",
"출처[국민건강보험공단]") , ylab="병원수", beside=T ,
col=rainbow(8), ylim=c(0,350))
plot(as.matrix(data1[1:9,2:11]), type="l"
main=paste("서울시 주요 구별 과목별 병원현황-2013년", "\n",
"출처[국민건강보험공단]") , ylab="병원수", beside=T ,
col=rainbow(8), ylim=c(0,350))
plot(as.matrix(data1[1:9,2:11]), type="l",
main=paste("서울시 주요 구별 과목별 병원현황-2013년", "\n",
"출처[국민건강보험공단]") , ylab="병원수", beside=T ,
col=rainbow(8), ylim=c(0,350))
data1
barplot(as.matrix(data1[1:9,2:11]),
main=paste("서울시 주요 구별 과목별 병원현황-2013년", "\n",
"출처[국민건강보험공단]") , ylab="병원수", beside=T ,
col=rainbow(8), ylim=c(0,350))
data1 ; as.matrix(data1[1:9,2:11])
View(pmil.pats)
as.matrix(pmil.pats[1:17, -c(1,2)])
as.matrix(pmil.pats[1:17, -c(1,2,110)])
m <- as.matrix(pmil.pats[1:17, -c(1,2,110)])
plot(m, type='p')
plot(m, type='l')
plot(m)
data1 ; as.matrix(data1[1:9,2:11])
barplot(m)
library(reshape2)
# Wide format을 Long format으로 변환
df_long <- melt(data1, id=c('표시과목'),
variable.name='지역명', value.name='의원수')
df_long
df <- melt(pmil.pats[1:17,-c(2)], id=c('지역'),
variable.name='시간', value.name='환자 천분율')
df
ggplot(df, aes(x=시간, y= 환자 천분율, fill=지역)) +
geom_line()
ggplot(df, aes(x=시간, y= 환자 천분율, group=지역)) +
geom_line()
ggplot(df, aes(x=시간, y= 환자 천분율, group=지역)) +
geom_line(na.rm = T)
df <- melt(pmil.pats[1:17,-c(2)], id=c('지역'),
variable.name='시간', value.name='환자_천분율')
df
ggplot(df, aes(x=시간, y= 환자 천분율, group=지역)) +
geom_line(na.rm = T)
ggplot(df, aes(x=시간, y= 환자_천분율, group=지역)) +
geom_line(na.rm = T)
ggplot(df, aes(x=시간, y= 환자_천분율, group=지역, shape=지역, colour=지역)) +
geom_line(na.rm = T)
ggplot(df, aes(x=시간, y= 환자_천분율, group=지역, shape=지역, colour=지역)) +
geom_line(na.rm = T) +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
ggplot(df, aes(x=시간, y= 환자_천분율, group=지역, shape=지역, colour=지역)) +
geom_line(na.rm = T) +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1)) +
theme_bw()
ggplot(df, aes(x=시간, y= 환자_천분율, group=지역, shape=지역, colour=지역)) +
geom_line(na.rm = T) +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
c(2010-01:2018:11)
c(2010-01:2018-11)
c(as.Date("2010-01"):as.Date("2018-11"))
seq(as.Date("2010-01"):as.Date("2018-11"))
seq.dates("01/2010", "11/2018", by = "month")
seq(as.Date("1910/1"), as.Date("1999/1"), "months")
seq(as.Date("1910/1/1"), as.Date("1999/1/1"), "months")
s <- seq(as.Date("1910/1/1"), as.Date("1999/1/1"), "months")
as.yearmon(s, "%Y-%B")
library(zoo)
as.yearmon(s, "%Y-%B")
head(df)
df %>%
mutate(시간 = as.Date(시간,format = "X.%y년.%m월"))
df <- melt(pmil.pats[1:17,-c(2)], id=c('지역'),
variable.name='시간', value.name='환자_천분율')
head(df)
df %>%
mutate(n시간 = as.Date(시간,format = "X.%y년.%m월"))
df %>%
mutate(n시간 = as.Date(시간,format = "X%y년.%m월"))
df %>%
mutate(n시간 = as.Date(시간,format = "X%Y년.%M월"))
head(df)
df %>%
mutate(n시간 = as.Date(시간, format = "X%Y년.%M월"))
df %>%
mutate(n시간 = as.Date(시간, format = "X%Y년.%m월"))
df %>%
mutate(n시간 = as.Date(시간, format = "X%Y년.%M월"))
s <- seq(as.Date("1910/1/1"), as.Date("1999/1/1"), "months", format="%Y.%M")
s
s <- seq(as.Date("2010/01"), as.Date("2018/11"), "months", format="%Y.%M")
s
s <- seq(as.Date("2010/01"), as.Date("2018/11"), "months", format="%Y/%M")
s <- seq(as.Date("2010/01/1"), as.Date("2018/11/1"), "months", format="%Y/%M")
s
s <- seq(as.Date("2010/01/15"), as.Date("2018/11/15"), "months", format="%Y/%M")
s
rep(s,17)
View(pmil.pats)
s <- seq(as.Date("2010/01/15"), as.Date("2018/11/15"), "months", format="%Y/%M")
copy <- pmil.pats
colnames(copy) <- c("지역", "disease", s)
heaD(copy)
head(copy)
s <- seq(as.Date("2010/01/15"), as.Date("2018/11/15"), "months", format="%Y/%M")
s
colnames(copy) <- c("지역", "disease", s)
head(copy)
head(df)
df %>%
arrange(지역)
df %>%
arrange(지역) %>5
df %>%
arrange(지역) %>%
mutate(n시간 = as.Date(시간, format = "X%Y년.%M월"))
df %>%
arrange(지역)%
df %>%
arrange(지역)
d <- df %>%
arrange(지역)
s
d <- df %>%
arrange(지역) ; nrow(d)
d <- df %>%
arrange(지역) ; nrow(d) ; 1836/107
head(d); 1836/107
head(d); 1836/107
d <- df %>%
arrange(지역) ; nrow(d)
View(d); 1836/107
View(d); 1836/108
s <- seq(as.Date("2010/01/15"), as.Date("2018/12/15"), "months", format="%Y/%M")
s
copy <- pmil.pats
colnames(copy) <- c("지역", "disease", s)
head(copy)
d <- df %>%
arrange(지역) ; nrow(d)
head(d)
rep(s, 17)
View(s, 17)
View(rep(s, 17))
d$time <-  rep(s,17)
d
pmil.TS <- df %>%
arrange(지역)
pmil.TS$time <-  rep(s,17)
pmil.TS
head(pmil.TS)
pmil.TS$Yr <- rep(c(2010:2018),17)
head(pmil.TS)
pmil.TS$Yr <- c(rep(2010, 17):rep(2018,17))
c(rep(2010, 12),rep(2011, 12),
rep(2012, 12),rep(2013, 12),
rep(2014, 12),rep(2015,12),
rep(2016, 12),rep(2017, 12),
rep(2018, 12))
pmil.TS$Yr <- rep(c(rep(2010, 12),rep(2011, 12),
rep(2012, 12),rep(2013, 12),
rep(2014, 12),rep(2015,12),
rep(2016, 12),rep(2017, 12),
rep(2018, 12)), 17)
head(pmil.TS)
View(pmil.TS)
ggplot(pmil.TS, aes(x = time, y = 환자_천분율)) +
geom_point(color = "darkorchid4") +
facet_wrap( ~ Yt ) +
scale_x_date(date_breaks = "5 years", date_labels = "%m-%Y")
ggplot(pmil.TS, aes(x = time, y = 환자_천분율)) +
geom_point(color = "darkorchid4") +
facet_wrap( ~ Yr ) +
scale_x_date(date_breaks = "5 years", date_labels = "%m-%Y")
ggplot(pmil.TS, aes(x = time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap( ~ Yr ) +
scale_x_date(date_breaks = "5 years", date_labels = "%m-%Y")
pmil.TS$mth <- rep(c(1:12), 153)
View(pmil.TS)
ggplot(pmil.TS, aes(x = mth, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap( ~ Yr ) +
scale_x_date(date_breaks = "5 years", date_labels = "%m-%Y")
ggplot(pmil.TS, aes(x = mth, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap( ~ Yr )
pmil.TS$mth <- rep(c("1","2","3","4","5","6","7","8","9","10","11","12"), 153)
View(pmil.TS)
# 연도별로
ggplot(pmil.TS, aes(x = mth, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap( ~ Yr )
pmil.TS$mth <- factor(rep(c("1","2","3","4","5","6",
"7","8","9","10","11","12"), 153),
level = c("1","2","3","4","5","6",
"7","8","9","10","11","12"),
ordered=T)
View(pmil.TS)
# 연도별로
ggplot(pmil.TS, aes(x = mth, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap( ~ Yr )
pmil.TS$season <- factor(rep(c("봄", "여름", "가을","겨울"), 153),
level = c("봄","여름", "가을", "겨울"),
ordered=T)
View(pmil.TS)
pmil.TS$season <- factor(rep(rep("봄",3),rep("여름",3), rep("가을",3), rep("겨울",3), 153),
level = c("봄","여름", "가을", "겨울"),
ordered=T)
pmil.TS$season <- factor(rep(c(rep("봄",3),rep("여름",3), rep("가을",3), rep("겨울",3)), 153),
level = c("봄","여름", "가을", "겨울"),
ordered=T)
View(pmil.TS)
pmil.TS$season <- factor(rep(c(rep("겨울",2),rep("봄",3), rep("여름",3), rep("가을",3), "겨울"), 153),
level = c("봄","여름", "가을", "겨울"),
ordered=T)
View(pmil.TS)
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x = season, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T)
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T)
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "5 years", date_labels = "%m-%Y")
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "3 months", date_labels = "%m-%Y")
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "3 months", date_labels = "%m-%Y") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "3 months", date_labels = "%y-%M") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y-%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y/%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
source('D:/Workspace/대회/기상청/02. 질병 추이.R', encoding = 'UTF-8', echo=TRUE)
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m", size=8) +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m", aes(size=8)) +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap(~지역) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap(지역~Yr) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap(.~지역+Yr) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(x =time, y = 환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap(.~지역+Yr) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(time,환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap(.~지역+Yr) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(time,환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap(.~지역) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도 및 지역 합쳐서, x label 을 season 별로
ggplot(pmil.TS, aes(time,환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap(.~season) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도, 지역별 구븐, x label 을 season 별로
ggplot(pmil.TS, aes(time,환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap(.~지역) +
scale_x_date(date_breaks = "3 months", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
# 전 연도, 지역별 구븐, x label 을 season 별로
ggplot(pmil.TS, aes(time,환자_천분율, group=지역, colour=지역)) +
geom_line(na.rm=T) +
facet_wrap(.~지역) +
scale_x_date(date_breaks = "1 year", date_labels = "%Y.%m") +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
M80.df <- melt(pmil.pats[1:17,-c(2)], id=c('지역'),
variable.name='시간', value.name='환자_천분율')
ggplot(M80.df, aes(x=시간, y= 환자_천분율, group=지역, shape=지역, colour=지역)) +
geom_line(na.rm = T) +
theme(axis.text.x=element_text(angle=90, hjust=1, vjust=1))
M80.df <- melt(pmil.pats[1:17,-c(2)], id=c('지역'),
variable.name='시간', value.name='환자_천분율')
seq(as.Date("2010-01"):as.Date("2018-11"))
df <- melt(pmil.pats[,-c(2)], id=c('지역'),
variable.name='시간', value.name='환자_천분율')
View(df)
df <- melt(pmil.pats[,-c(2)], id=c('지역', 'disease'),
variable.name='시간', value.name='환자_천분율')
head(pmil.pats)
df <- melt(pmil.pats[,-c(2)], id=c(disease'),
df <- melt(pmil.pats[,-c(2)], id=c('disease'),
variable.name='시간', value.name='환자_천분율')
df <- melt(pmil.pats, id=c('지역', 'disease'),
variable.name='시간', value.name='환자_천분율')
View(df)
df <- melt(pmil.pats, id=c('지역', 'disease'),
variable.name='시간', value.name='환자_천분율') %>%
arrange(지역)
View(df)
df <- melt(pmil.pats, id=c('지역', 'disease'),
variable.name='시간', value.name='환자_천분율') %>%
arrange(지역, disease)
View(df)
View(total.df)
total.df <- melt(pmil.pats, id=c('지역', 'disease'),
variable.name='시간', value.name='환자_천분율') %>%
arrange(지역, disease)
View(total.df)
s <- seq(as.Date("2010/01/15"), as.Date("2018/12/15"), "months", format="%Y/%M")
dates <- seq(as.Date("2010/01/15"), as.Date("2018/12/15"), "months", format="%Y/%M")
realTime <- seq(as.Date("2010/01/15"), as.Date("2018/12/15"), "months", format="%Y/%M")
mths <- factor(rep(c("1","2","3","4","5","6",
"7","8","9","10","11","12"), 153),
level = c("1","2","3","4","5","6",
"7","8","9","10","11","12"),
ordered=T)
mths <- c("1","2","3","4","5","6","7","8","9","10","11","12")
