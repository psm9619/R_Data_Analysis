geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
# eng_t <- Corpus(VectorSource(counts))
#
# eng_t2 <- tm_map(eng_t, stripWhitespace)
# eng_t2 <- tm_map(eng_t2, tolower)
# eng_t2 <- tm_map(eng_t2, removeNumbers)
# eng_t2 <- tm_map(eng_t2, removePunctuation)
# eng_t2 <- tm_map(eng_t2, removeWords, stopwords('en')) ; eng_t2
#
# eng_t2[1:10]
# engH <- TermDocumentMatrix(eng_t2)
# mat <- as.matrix(engH)
#
# freq1 <- sort(rowSums(mat), decreasing=T)
#
# palete <- brewer.pal (7,"Set3")
# wordcloud(names(freq1), freq = freq1, scale = c(5,0.3),
#           rot.per=0.25, min.freq=1,
#           random.order=F, random.color=T, colors=palete)
top10 <- as.data.frame(head(sort(counts, decreasing=T), 10))
top10 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10
top10 <- as.data.frame(head(sort(counts, decreasing=T), 10))
txt <- readLines("hiphop.txt")
library (KoNLP) ; library(tm) ; useSejongDic()
library(stringr) ; library(dplyr)
library(wordcloud) ; library(ggplot2) ; library(RColorBrewer)
library(extrafont) ; windowsFonts()
options(digits = 2)  ### 소수점 이하 두 자리까지만 표기
txt <- readLines("hiphop.txt")
txt <- gsub(" ", "-", txt)
txt <- str_split(txt, "-")
txt <- str_replace_all(unlist(txt),"[^:alpha:]]", "")
txt_nouns <- sapply(txt, extractNoun, USE.NAMES = F)
txt_nouns <- unlist(txt_nouns)
###
txt_nouns[300:400]
#--------------------------------------------------------------
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
txt_nouns[1:100] ; txt_nouns[405:700]
gsub_txt <- c("받\\S*", "겠\\S*", "않\\S*", "처럼\\S*", "면\\S*",
"었\\S*", "을\\S*", "까\\S*", "길\\S*", " ","따\\S*", "\\d+","[:punct:]",'[ㄱ-ㅎ]',"(ㅜ|ㅠ)")
for (i in 1:length(gsub_txt)) {
txt_nouns <- gsub(gsub_txt[i], "", txt_nouns)
}
txt_nouns <- Filter(function(x) {nchar[x] >=2}, txt_nouns)
#--------------------------------------------------------------
write(txt_nouns, "rev_hiphop.txt")
rev <- read.table("rev_hiphop.txt")
nrow(rev) ; class(rev)
counts <- table(rev)
palete <- brewer.pal(10, "YlOrRd")
set.seed(123)
par(bg="black")
wordcloud(names(counts), freq = counts, scale = c(4,0.5),
rot.per=0.25, min.freq=10, max.words=100,
random.order=F, random.color=T, colors=palete)
#--------------------------------------------------------------
top10 <- as.data.frame(head(sort(counts, decreasing=T), 10))
top10 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10
# col <- c("")
# for (i in 1:10) {
#   if (top10[i,3] >=25)
#     col <- c(col, "#FF9999")
#   else if (top10[i,3] >= 10)
#     col <- c(col, "#FFCC99")
#   else
#     col <- c(col, "#FFFF99")
# }
## ------------------------------------------------------
ggplot (top10, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
## ------------------------------------------------------
row.names(top10) <- top10$rev
top10[1] <- NULL
ggplot (top10, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
# eng_t <- Corpus(VectorSource(counts))
#
# eng_t2 <- tm_map(eng_t, stripWhitespace)
# eng_t2 <- tm_map(eng_t2, tolower)
# eng_t2 <- tm_map(eng_t2, removeNumbers)
# eng_t2 <- tm_map(eng_t2, removePunctuation)
# eng_t2 <- tm_map(eng_t2, removeWords, stopwords('en')) ; eng_t2
#
# eng_t2[1:10]
# engH <- TermDocumentMatrix(eng_t2)
# mat <- as.matrix(engH)
#
# freq1 <- sort(rowSums(mat), decreasing=T)
#
# palete <- brewer.pal (7,"Set3")
# wordcloud(names(freq1), freq = freq1, scale = c(5,0.3),
#           rot.per=0.25, min.freq=1,
#           random.order=F, random.color=T, colors=palete)
txt <- readLines("hiphop.txt")
txt <- gsub(" ", "-", txt)
library (KoNLP) ; library(tm) ; useSejongDic()
library(stringr) ; library(dplyr)
library(wordcloud) ; library(ggplot2) ; library(RColorBrewer)
library(extrafont) ; windowsFonts()
options(digits = 2)  ### 소수점 이하 두 자리까지만 표기
txt <- readLines("hiphop.txt")
txt <- gsub(" ", "-", txt)
txt <- str_split(txt, "-")
setwd("D:/Workspace/R_data_analysis/Part2/Stage2-Graph/practiceproblem")
library (KoNLP) ; library(tm) ; useSejongDic()
library(stringr) ; library(dplyr)
library(wordcloud) ; library(ggplot2) ; library(RColorBrewer)
library(extrafont) ; windowsFonts()
options(digits = 2)  ### 소수점 이하 두 자리까지만 표기
txt <- readLines("hiphop.txt")
txt <- gsub(" ", "-", txt)
txt <- str_split(txt, "-")
txt <- str_replace_all(unlist(txt),"[^:alpha:]]", "")
txt_nouns <- sapply(txt, extractNoun, USE.NAMES = F)
txt_nouns <- unlist(txt_nouns)
###
txt_nouns[300:400]
#--------------------------------------------------------------
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
txt_nouns[1:100] ; txt_nouns[405:700]
gsub_txt <- c("받\\S*", "겠\\S*", "않\\S*", "처럼\\S*", "면\\S*",
"었\\S*", "을\\S*", "까\\S*", "길\\S*", " ","따\\S*", "\\d+","[:punct:]",'[ㄱ-ㅎ]',"(ㅜ|ㅠ)")
for (i in 1:length(gsub_txt)) {
txt_nouns <- gsub(gsub_txt[i], "", txt_nouns)
}
txt_nouns <- Filter(function(x) {nchar[x] >=2}, txt_nouns)
#--------------------------------------------------------------
write(txt_nouns, "rev_hiphop.txt")
rev <- read.table("rev_hiphop.txt")
nrow(rev) ; class(rev)
counts <- table(rev)
palete <- brewer.pal(10, "YlOrRd")
set.seed(123)
par(bg="black")
wordcloud(names(counts), freq = counts, scale = c(4,0.5),
rot.per=0.25, min.freq=10, max.words=100,
random.order=F, random.color=T, colors=palete)
#--------------------------------------------------------------
top10 <- as.data.frame(head(sort(counts, decreasing=T), 10))
top10 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10
# col <- c("")
# for (i in 1:10) {
#   if (top10[i,3] >=25)
#     col <- c(col, "#FF9999")
#   else if (top10[i,3] >= 10)
#     col <- c(col, "#FFCC99")
#   else
#     col <- c(col, "#FFFF99")
# }
## ------------------------------------------------------
ggplot (top10, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
## ------------------------------------------------------
row.names(top10) <- top10$rev
top10[1] <- NULL
ggplot (top10, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
top10 <- head(sort(counts, decreasing=T), 10)
top10 <- as.data.frame(top10)
top10 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10
ggplot (top10, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (data=top10, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
top10 <- head(sort(counts, decreasing=T), 10)
top10 <- head(sort(counts, decreasing=T), 10) ; class(top10)
top10 <- as.data.frame(top10)
top10 <- as.data.frame(top10) ; class(top10)
nrow(top10)
top10 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10
ggplot (top10, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (top10, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev)
top10_2 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10_@
## ------------------------------------------------------
ggplot (top10, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
top10_2
ggplot (top10_2, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (top10_2, aes(x=rev, y=Freq)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (top10_2, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (top10, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
ggplot (top10_2, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (top10, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (top10, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
ggplot (top10, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (top10, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
row.names(top10) <- top10$rev
top10[1] <- NULL
ggplot (top10, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
top10
ggplot (top10, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
top10_2
row.names(top10_2) <- top10_2$rev
top10_2[1] <- NULL
top10_2
top10_2 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10_2
top10 <- as.data.frame(top10)
top10_2 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10 <- head(sort(counts, decreasing=T), 10) ; class(top10)
top10 <- as.data.frame(top10)
top10_2 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10_2
row.names(top10_2) <- top10_2$rev
ggplot (top10_2, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
source('D:/Workspace/R_data_analysis/Part2/Stage2-Graph/practiceproblem/hiphop_analysis.R', encoding = 'UTF-8', echo=TRUE)
ggplot (top10_2, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
top10_2
top10 <- head(sort(counts, decreasing=T), 10) ; class(top10)
top10 <- as.data.frame(top10)
top10_2 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10_2
ggplot (top10_2, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (top10_2, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
row.names(top10_2) <- top10_2$rev
top10_2
ggplot (top10_2, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
row.names(top10_2) <- top10_2$rev
top10_2
ggplot (top10_2, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
ggplot (top10_2, aes(x=rev, y=pct)) +
geom_col (width=0.8, fill = rev) +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
ggplot (top10_2, aes(x=rev, y=pct, fill=rev)) +
geom_bar (width=0.8, stat="identity") +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
top10_2
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
txt_nouns[1:100] ; txt_nouns[405:700]
txt <- readLines("hiphop.txt")
# txt <- gsub(" ", "-", txt)
# txt <- str_split(txt, "-")
txt <- str_replace_all(unlist(txt),"[^:alpha:]]", "")
txt_nouns <- sapply(txt, extractNoun, USE.NAMES = F)
txt_nouns <- unlist(txt_nouns)
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
txt_nouns[1:100] ; txt_nouns[405:700]
txt_nouns <- gsub("[:lower:]", "[:upper:]", txt_nouns)
txt <- str_replace_all(unlist(txt),"[^:alpha:]]", "")
txt_nouns <- sapply(txt, extractNoun, USE.NAMES = F)
txt_nouns <- unlist(txt_nouns)
###
txt_nouns[300:400]
#--------------------------------------------------------------
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
txt_nouns[1:100] ; txt_nouns[405:700]
gsub_txt <- c("받\\S*", "겠\\S*", "않\\S*", "처럼\\S*", "면\\S*",
"었\\S*", "을\\S*", "까\\S*", "길\\S*", " ","따\\S*", "\\d+","[:punct:]",'[ㄱ-ㅎ]',"(ㅜ|ㅠ)")
for (i in 1:length(gsub_txt)) {
txt_nouns <- gsub(gsub_txt[i], "", txt_nouns)
}
txt_nouns <- gsub("[:lower:]", "[:upper:]", txt_nouns)
txt_nouns <- Filter(function(x) {nchar[x] >=2}, txt_nouns)
txt_nouns <- gsub("[:lower:]", "[:upper:]", txt_nouns)
txt_nouns <- Filter(function(x) {nchar[x] >=2}, txt_nouns)
txt_nouns <- Filter(function(x) { nchar[x] >=2 }, txt_nouns)
txt_nouns <- gsub("[:lower:]", "[:upper:]", txt_nouns)
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
write(txt_nouns, "rev_hiphop.txt")
rev <- read.table("rev_hiphop.txt")
nrow(rev) ; class(rev)
counts <- table(rev)
palete <- brewer.pal(10, "YlOrRd")
set.seed(123)
par(bg="black")
wordcloud(names(counts), freq = counts, scale = c(4,0.5),
rot.per=0.25, min.freq=10, max.words=100,
random.order=F, random.color=T, colors=palete)
palete <- brewer.pal(10, "YlGn")
palete <- brewer.pal(9, "YlGn")
set.seed(123)
par(bg="black")
wordcloud(names(counts), freq = counts, scale = c(4,0.5),
rot.per=0.25, min.freq=10, max.words=100,
random.order=F, random.color=T, colors=palete)
palete <- brewer.pal(9, "Spectral")
wordcloud(names(counts), freq = counts, scale = c(4,0.5),
rot.per=0.25, min.freq=10, max.words=100,
random.order=F, random.color=T, colors=palete)
palete <- brewer.pal(10, "Spectral")
set.seed(123)
par(bg="black")
wordcloud(names(counts), freq = counts, scale = c(4,0.5),
rot.per=0.25, min.freq=10, max.words=100,
random.order=F, random.color=T, colors=palete)
top10 <- head(sort(counts, decreasing=T), 10) ; class(top10)
top10 <- as.data.frame(top10)
top10_2 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10_2
ggplot (top10_2, aes(x=rev, y=pct, fill=rev)) +
geom_bar (width=0.8, stat="identity") +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
txt <- readLines("hiphop.txt")
# txt <- gsub(" ", "-", txt)
# txt <- str_split(txt, "-")
txt <- str_replace_all(unlist(txt),"[^:alpha:]]", "")
txt_nouns <- sapply(txt, extractNoun, USE.NAMES = F)
txt_nouns <- unlist(txt_nouns)
###
txt_nouns[300:400]
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
# txt_nouns[1:100] ; txt_nouns[405:700]
txt_nouns <- gsub("[:lower:]", "[:upper:]", txt_nouns)
txt_nouns[300:400]
# txt_nouns[1:100] ; txt_nouns[405:700]
txt_nouns <- gsub("[[:lower:]]", "[[:upper:]", txt_nouns)
txt_nouns[300:400]
###
txt_nouns[300:400]
#--------------------------------------------------------------
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
# txt_nouns[1:100] ; txt_nouns[405:700]
txt_nouns <- gsub("[[:lower:]]", "[[:upper:]", txt_nouns)
txt_nouns[300:400]
txt <- readLines("hiphop.txt")
# txt <- gsub(" ", "-", txt)
# txt <- str_split(txt, "-")
txt <- str_replace_all(unlist(txt),"[^:alpha:]]", "")
txt_nouns <- sapply(txt, extractNoun, USE.NAMES = F)
txt_nouns <- unlist(txt_nouns)
###
txt_nouns[300:400]
#--------------------------------------------------------------
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
# txt_nouns[1:100] ; txt_nouns[405:700]
txt_nouns <- gsub("[[:lower:]]", "[[:upper:]", txt_nouns)
txt_nouns[300:400]
# txt_nouns[1:100] ; txt_nouns[405:700]
txt_nouns <- toupper(txt_nouns)
txt_nouns[300:400]
txt <- readLines("hiphop.txt")
# txt <- gsub(" ", "-", txt)
# txt <- str_split(txt, "-")
txt <- str_replace_all(unlist(txt),"[^:alpha:]]", "")
txt_nouns <- sapply(txt, extractNoun, USE.NAMES = F)
txt_nouns <- unlist(txt_nouns)
###
txt_nouns[300:400]
#--------------------------------------------------------------
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
# txt_nouns[1:100] ; txt_nouns[405:700]
txt_nouns <- toupper(txt_nouns)
txt_nouns[300:400]
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
# txt_nouns[1:100] ; txt_nouns[405:700]
txt_nouns <- toupper(txt_nouns)
txt_nouns[300:400]
gsub_txt <- c("받\\S*", "겠\\S*", "않\\S*", "처럼\\S*", "면\\S*",
"었\\S*", "을\\S*", "까\\S*", "길\\S*", " ","따\\S*", "\\d+","[:punct:]",'[ㄱ-ㅎ]',"(ㅜ|ㅠ)")
for (i in 1:length(gsub_txt)) {
txt_nouns <- gsub(gsub_txt[i], "", txt_nouns)
}
txt_nouns <- Filter(function(x) {nchar(x)>=2}, txt_nouns)
#--------------------------------------------------------------
write(txt_nouns, "rev_hiphop.txt")
rev <- read.table("rev_hiphop.txt")
nrow(rev) ; class(rev)
counts <- table(rev)
palete <- brewer.pal(10, "Spectral")
set.seed(123)
par(bg="black")
wordcloud(names(counts), freq = counts, scale = c(4,0.5),
rot.per=0.25, min.freq=10, max.words=100,
random.order=F, random.color=T, colors=palete)
top10 <- head(sort(counts, decreasing=T), 10) ; class(top10)
top10 <- as.data.frame(top10)
top10_2 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10_2
ggplot (top10_2, aes(x=rev, y=pct, fill=rev)) +
geom_bar (width=0.8, stat="identity") +
labs(x="Words", y="Percentage (%)", title="Top 10 words in K-HipHop songs")
top10_2[1] <- NULL
top10_2
row.names(top10_2) <- top10_2$rev
top10_2[1] <- NULL
top10_2
top10_2 <- top10 %>%
mutate(pct= Freq / sum(Freq) * 100) %>%
mutate (ylabel = paste(sprintf("%4.1f", pct), '%', sep = '')) %>%
arrange(desc(rev)) %>%
mutate(ypos = cumsum(pct)- 0.5*pct)
top10_2
row.names(top10_2) <- top10_2$rev
top10_2
ggplot (top10_2, aes(x='', y=pct, fill = rev)) +
geom_bar(width=1, stat='identity') +
geom_text(aes(y=ypos, label = paste(row.names(top10_2), "\n",ylabel)), color='white') +
coord_polar("y", start=0) +
labs(title="Top 10 words in K-HipHop songs")
