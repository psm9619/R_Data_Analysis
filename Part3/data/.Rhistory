select(manufacturer, hwy) %>%
summarise (average = mean(hwy, na.rm=T)) ; avg_hwy
#4
part_mpg <- select(mpg, class, cty) ; part_mpg
#5
suv <- part_mpg %>%
filter(class == 'suv') %>%
summarise(average = mean(cty, na.rm=T)) ; suv
compact <- part_mpg %>%
filter(class == 'compact') %>%
summarise(average = mean(cty, na.rm=T)) ; compact
#6
audi_5 <- mpg %>%
select(manufacturer, hwy) %>%
filter(manufacturer %in% 'audi') %>%
arrange(desc(hwy)) %>%
head(5) ; audi_5
#7
efficiency_avg_3 <- copy_mpg %>%
mutate(합산연비변수 = hwy+cty) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
head(5) # head(n) 위에서부터 n개의 데이터를 출력하라
efficiency_avg_3
#8
cty_avg <- mpg %>%
group_by(class) %>%
summarise(avg = mean(cty, na.rm=T)) ; cty_avg
#9
cty_avg_rearranged <- cty_avg %>%
arrange(desc(avg)) ; cty_avg_rearranged
#10
hwy_avg_3 <- mpg%>%
group_by (manufacturer) %>%
summarise(hwy_avg = mean(hwy, na.rm = T)) %>%
head(3) ; hwy_avg_3
#11
compact_count <- mpg%>%
filter(class == 'compact') %>%
group_by (manufacturer) %>%
summarise(cpt_number = n()) %>%
arrange(desc(cpt_number))  ; compact_count
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
mpg
#View (mpg)
#1
d_4 <- mpg %>%
select(displ, hwy) %>%
filter(displ <= 4) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_4
d_5 <- mpg %>%
select (displ, hwy) %>%
filter(displ >= 5) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_5
higher <- function(a, b) {
if (a>b) {result <- a}
else {result<- b}
return (result)
}
higher (d_4, d_5)
#2
audi <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'audi') %>%
summarise (average = mean(cty, na.rm=T)) ; View (audi)
toyota <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'toyota') %>%
summarise (average = mean(cty, na.rm=T)) ; View (toyota)
higher (audi, toyota)
#3
avg_hwy <- mpg %>%
select(manufacturer, hwy) %>%
summarise (average = mean(hwy, na.rm=T)) ; avg_hwy
#4
part_mpg <- select(mpg, class, cty) ; part_mpg
#5
suv <- part_mpg %>%
filter(class == 'suv') %>%
summarise(average = mean(cty, na.rm=T)) ; suv
compact <- part_mpg %>%
filter(class == 'compact') %>%
summarise(average = mean(cty, na.rm=T)) ; compact
#6
audi_5 <- mpg %>%
select(manufacturer, hwy) %>%
filter(manufacturer %in% 'audi') %>%
arrange(desc(hwy)) %>%
head(5) ; audi_5
#7
efficiency_avg_3 <- copy_mpg %>%
mutate(합산연비변수 = hwy+cty) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
head(5) # head(n) 위에서부터 n개의 데이터를 출력하라
efficiency_avg_3
#8
cty_avg <- mpg %>%
group_by(class) %>%
summarise(avg = mean(cty, na.rm=T)) ; cty_avg
#9
cty_avg_rearranged <- cty_avg %>%
arrange(desc(avg)) ; cty_avg_rearranged
#10
hwy_avg_3 <- mpg%>%
group_by (manufacturer) %>%
summarise(hwy_avg = mean(hwy, na.rm = T)) %>%
head(3) ; hwy_avg_3
#11
compact_count <- mpg%>%
filter(class == 'compact') %>%
group_by (manufacturer) %>%
summarise(cpt_number = n()) %>%
arrange(desc(cpt_number))  ; compact_count
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
mpg
#View (mpg)
#1
d_4 <- mpg %>%
select(displ, hwy) %>%
filter(displ <= 4) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_4
d_5 <- mpg %>%
select (displ, hwy) %>%
filter(displ >= 5) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_5
higher <- function(a, b) {
if (a>b) {result <- a}
else {result<- b}
return (result)
}
higher (d_4, d_5)
#2
audi <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'audi') %>%
summarise (average = mean(cty, na.rm=T)) ; audi
toyota <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'toyota') %>%
summarise (average = mean(cty, na.rm=T)) ; toyota
higher (audi, toyota)
#3
avg_hwy <- mpg %>%
select(manufacturer, hwy) %>%
summarise (average = mean(hwy, na.rm=T)) ; avg_hwy
#4
part_mpg <- select(mpg, class, cty) ; part_mpg
#5
suv <- part_mpg %>%
filter(class == 'suv') %>%
summarise(average = mean(cty, na.rm=T)) ; suv
compact <- part_mpg %>%
filter(class == 'compact') %>%
summarise(average = mean(cty, na.rm=T)) ; compact
#6
audi_5 <- mpg %>%
select(manufacturer, hwy) %>%
filter(manufacturer %in% 'audi') %>%
arrange(desc(hwy)) %>%
head(5) ; audi_5
#7
efficiency_avg_3 <- copy_mpg %>%
mutate(합산연비변수 = hwy+cty) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
head(5) # head(n) 위에서부터 n개의 데이터를 출력하라
efficiency_avg_3
#8
cty_avg <- mpg %>%
group_by(class) %>%
summarise(avg = mean(cty, na.rm=T)) ; cty_avg
#9
cty_avg_rearranged <- cty_avg %>%
arrange(desc(avg)) ; cty_avg_rearranged
#10
hwy_avg_3 <- mpg%>%
group_by (manufacturer) %>%
summarise(hwy_avg = mean(hwy, na.rm = T)) %>%
head(3) ; hwy_avg_3
#11
compact_count <- mpg%>%
filter(class == 'compact') %>%
group_by (manufacturer) %>%
summarise(cpt_number = n()) %>%
arrange(desc(cpt_number))  ; compact_count
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
mpg
#View (mpg)
#1
d_4 <- mpg %>%
select(displ, hwy) %>%
filter(displ <= 4) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_4
d_5 <- mpg %>%
select (displ, hwy) %>%
filter(displ >= 5) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_5
higher <- function(a, b) {
if (a>b) {result <- a}
else {result<- b}
return (result)
}
higher (d_4, d_5)
#2
audi <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'audi') %>%
summarise (average = mean(cty, na.rm=T)) ; audi
toyota <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'toyota') %>%
summarise (average = mean(cty, na.rm=T)) ; toyota
higher (audi, toyota)
#3
avg_hwy <- mpg %>%
select(manufacturer, hwy) %>%
summarise (average = mean(hwy, na.rm=T)) ; avg_hwy
#4
part_mpg <- select(mpg, class, cty) ; part_mpg
#5
suv <- part_mpg %>%
filter(class == 'suv') %>%
summarise(average = mean(cty, na.rm=T)) ; suv
compact <- part_mpg %>%
filter(class == 'compact') %>%
summarise(average = mean(cty, na.rm=T)) ; compact
#6
audi_5 <- mpg %>%
select(manufacturer, hwy) %>%
filter(manufacturer %in% 'audi') %>%
arrange(desc(hwy)) %>%
head(5) ; audi_5
#7
efficiency_avg_3 <- copy_mpg %>%
mutate(합산연비변수 = hwy+cty) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
head(5) # head(n) 위에서부터 n개의 데이터를 출력하라
efficiency_avg_3
#8
cty_avg <- mpg %>%
group_by(class) %>%
summarise(avg = mean(cty, na.rm=T)) ; cty_avg
#9
cty_avg_rearranged <- cty_avg %>%
arrange(desc(avg)) ; cty_avg_rearranged
#10
hwy_avg_3 <- mpg%>%
group_by (manufacturer) %>%
summarise(hwy_avg = mean(hwy, na.rm = T)) %>%
head(3) ; hwy_avg_3
#11
compact_count <- mpg%>%
filter(class == 'compact') %>%
group_by (manufacturer) %>%
summarise(cpt_number = n()) %>%
arrange(desc(cpt_number))  ; compact_count
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
mpg
#1
d_4 <- mpg %>%
select(displ, hwy) %>%
filter(displ <= 4) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_4
d_5 <- mpg %>%
select (displ, hwy) %>%
filter(displ >= 5) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_5
higher <- function(a, b) {
if (a>b) {result <- a}
else {result<- b}
return (result)
}
higher (d_4, d_5)
#2
audi <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'audi') %>%
summarise (average = mean(cty, na.rm=T)) ; audi
toyota <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'toyota') %>%
summarise (average = mean(cty, na.rm=T)) ; toyota
higher (audi, toyota)
#3
avg_hwy <- mpg %>%
select(manufacturer, hwy) %>%
summarise (average = mean(hwy, na.rm=T)) ; avg_hwy
#4
part_mpg <- select(mpg, class, cty) ; part_mpg
#5
suv <- part_mpg %>%
filter(class == 'suv') %>%
summarise(average = mean(cty, na.rm=T)) ; suv
compact <- part_mpg %>%
filter(class == 'compact') %>%
summarise(average = mean(cty, na.rm=T)) ; compact
#6
audi_5 <- mpg %>%
select(manufacturer, hwy) %>%
filter(manufacturer %in% 'audi') %>%
arrange(desc(hwy)) %>%
head(5) ; audi_5
#7
efficiency_avg_3 <- copy_mpg %>%
mutate(합산연비변수 = hwy+cty) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
head(5) # head(n) 위에서부터 n개의 데이터를 출력하라
efficiency_avg_3
#8
cty_avg <- mpg %>%
group_by(class) %>%
summarise(avg = mean(cty, na.rm=T)) ; cty_avg
#9
cty_avg_rearranged <- cty_avg %>%
arrange(desc(avg)) ; cty_avg_rearranged
#10
hwy_avg_3 <- mpg%>%
group_by (manufacturer) %>%
summarise(hwy_avg = mean(hwy, na.rm = T)) %>%
head(3) ; hwy_avg_3
#11
compact_count <- mpg%>%
filter(class == 'compact') %>%
group_by (manufacturer) %>%
summarise(cpt_number = n()) %>%
arrange(desc(cpt_number))  ; compact_count
## corrected
mpg %>%
filter(manufacturer %in% c('audi', 'toyota')) %>%
group_by (manufacturer) %>%
summarise (average=mean(cty))
summarise(average = mean(cty, na.rm=T)) ; compact
part_mpg %>%
filter(class %ni% c('suv', 'compact')) %>%
group_by(class)
summarise(average = mean(cty, na.rm=T)) ; compact
efficiency_avg_3
#7
efficiency_avg_3 <- copy_mpg %>%
mutate(합산연비변수 = hwy+cty) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
head(5) # head(n) 위에서부터 n개의 데이터를 출력하라
install.packages("ggplot2")
library(ggplot2)
library(dplyr)
mpg
#1
d_4 <- mpg %>%
select(displ, hwy) %>%
filter(displ <= 4) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_4
d_5 <- mpg %>%
select (displ, hwy) %>%
filter(displ >= 5) %>%
summarise (average = mean(hwy, na.rm=T))  ; d_5
higher <- function(a, b) {
if (a>b) {result <- a}
else {result<- b}
return (result)
}
higher (d_4, d_5)
#2
audi <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'audi') %>%
summarise (average = mean(cty, na.rm=T)) ; audi
toyota <- mpg %>%
select(manufacturer, cty) %>%
filter(manufacturer %in% 'toyota') %>%
summarise (average = mean(cty, na.rm=T)) ; toyota
higher (audi, toyota)
## corrected ##############################################
mpg %>%
filter(manufacturer %in% c('audi', 'toyota')) %>%
group_by (manufacturer) %>%
summarise (average=mean(cty))
#3
avg_hwy <- mpg %>%
select(manufacturer, hwy) %>%
summarise (average = mean(hwy, na.rm=T)) ; avg_hwy
#4
part_mpg <- select(mpg, class, cty) ; part_mpg
#5
suv <- part_mpg %>%
filter(class == 'suv') %>%
summarise(average = mean(cty, na.rm=T)) ; suv
compact <- part_mpg %>%
filter(class == 'compact') %>%
summarise(average = mean(cty, na.rm=T)) ; compact
#####################################33
part_mpg %>%
filter(class %ni% c('suv', 'compact')) %>%
group_by(class)
summarise(average = mean(cty, na.rm=T)) ; compact
#6
audi_5 <- mpg %>%
select(manufacturer, hwy) %>%
filter(manufacturer %in% 'audi') %>%
arrange(desc(hwy)) %>%
head(5) ; audi_5
#7
efficiency_avg_3 <- copy_mpg %>%
mutate(합산연비변수 = hwy+cty) %>%
mutate(평균연비변수 = 합산연비변수/2) %>%
arrange(desc(평균연비변수)) %>%
head(5) # head(n) 위에서부터 n개의 데이터를 출력하라
efficiency_avg_3
#8
cty_avg <- mpg %>%
group_by(class) %>%
summarise(avg = mean(cty, na.rm=T)) ; cty_avg
#9
cty_avg_rearranged <- cty_avg %>%
arrange(desc(avg)) ; cty_avg_rearranged
#10
hwy_avg_3 <- mpg%>%
group_by (manufacturer) %>%
summarise(hwy_avg = mean(hwy, na.rm = T)) %>%
head(3) ; hwy_avg_3
#11
compact_count <- mpg%>%
filter(class == 'compact') %>%
group_by (manufacturer) %>%
summarise(cpt_number = n()) %>%
arrange(desc(cpt_number))  ; compact_count
install.packages("ggplot2")
install.packages ("reshape2")
library("reshape2")
#옆으로 긴, wide 형식의 데이터 프레임을 세로로 길게 변형시켜 줌
fruits
#옆으로 긴, wide 형식의 데이터 프레임을 세로로 길게 변형시켜 줌
fruits <- read.csv(Fruits.csv)
#옆으로 긴, wide 형식의 데이터 프레임을 세로로 길게 변형시켜 줌
fruits <- read.csv("Fruits.csv")
#옆으로 긴, wide 형식의 데이터 프레임을 세로로 길게 변형시켜 줌
fruits <- read.csv("fruits_10.csv")
fruits
melt (fruits, id='year')
melt (fruits, id = c ('year', 'name'))
value.name ='변수값)'
value.name ='변수값)'
dcast (mtest, name~var_name, sum())
dcast (mtest, name~var_name, sum)
dcast (mtest, name~변수값값, sum)
dcast (mtest, name~변수값, sum)
install.packages("stringr")
install.packages("stringr")
library (stringr)
fruits <- c( "apple", "Apple", "banana", "pineapple")
str_detect(fruits, "A")
str_detect(fruits, 'a')
str_detect(fruits, '^a')
str_detect(fruits, 'e$')
str_detect (fruits, '^[aA]')
str_detect(fruits, '[aA]')
#ignore.case() --> 대소문자 구별 없앰
str_detect(fruits, ignore.case('a'))
#ignore.case() --> 대소문자 구별 없앰
str_detect(fruits, ignore.case('A'))
#ignore.case() --> 대소문자 구별 없앰
str_detect(fruits, ignore.case('a'))
str_detect(fruits, a, ignore.case=T)
#ignore.case() --> 대소문자 구별 없앰
str_detect(fruits, regex('a', ignore.case=T))
# regex(찾으려는 패턴, ignore.case =T) --> 대소문자 구별 없앰
str_detect(fruits, regex('a', ignore_case=T))
fruits
str_count(fruits, 'a')
str_c ("apple", "banana")
str_c (fruits, "name is ", fruits)
str_c (fruits, " name is ", fruits)
str_c (fruits, " name is ") #string 열이 주어지면 반복적으로 하나씩 붙여준다다
str_c (fruits, collapse="")
str_c (fruits, collapse=", ") #주어진 string 열의 모든 데이터를, 주어진 (", " 등) 것을 사이에 두고 붙임
str_dup (fruits, 3)
str_length ('apple')
str_length(fruits)
str_length('과일일')
str_length('과일')
str_locate('apple', a)
str_locate('apple', 'a')
str_locate(fruits, 'a')
str_replace('apple', 'p', 'a')
str_replace('apple', 'p', '+++')
str_replace_all('apple', 'p','a')
fruits <- str_c('apple','/','orange','/','banana')
fruits
str_split(fruits, '/')
str_sub(fruits, start=1, end=3)
str_sub(fruits, start=6, end=9)
str_sub(fruits, start=6)
str_trim ("  apple banana berry  ")
str_trim ("\t apple banana")
str_trim ('\t'  apple banana'')
str_trim ('\t  apple banana')
str_trim ('( )apple banana \n')
