x<- 1: 3
y <- 4:2
plot (x:y)
plot (x,y)
plot (x, y, xlim = c(0,4) y lim = c( 0,4))
plot (x, y, xlim = c(0,5) y lim = c( 5,4))
plot (x, y, xlim = c(0,5) ylim = c( 5,4))
plot (x, y, xlim = c(0,5), ylim = c( 5,4))
plot (x, y, xlim = c(0,5), ylim = c0,5))
plot (x, y, xlim = c(0,5), ylim = c(0,5))
plot (x, y, xlim = c(0,5), ylim = c(0,5))
AXIS ( 2, YLIM (0,5))
plot (x, y, xlim = c(0,5), ylim = c(0,5),
xlab = 'x', ylab = 'y', main = 'plot')
v1 <- c(100,130, 120, 160, 150)
plot (v1, type = 'o', col = 'red',
ylim = c(0,200), axes = FALSE, ann= F)
axis (1, at= 1:5, lab= c ('M', 'T', 'W', 'Th', 'F'))
axis (2, ylim= c(0,200))
title (main = 'FRUIT', col.main='red', font.main=4)
title (xlab = 'Day', col.lab = 'black')
title (ylab = 'price', col.lab= 'blue')
title (main = 'FRUIT', col.main='red', font.main=6)
plot (x, y, xlim = c(0,5), ylim = c(0,5), xlab = 'x', ylab = 'y', main = 'plot')
v1 <- c(100,130, 120, 160, 150)
plot (v1, type = 'o', col = 'red',
ylim = c(0,200), axes = FALSE, ann= F)
axis (1, at= 1:5, lab= c ('M', 'T', 'W', 'Th', 'F'))
axis (2, ylim= c(0,200))
title (main = 'FRUIT', col.main='red', font.main=6)
title (xlab = 'Day', col.lab = 'black')
title (ylab = 'price', col.lab= 'blue')
plot (x, y, xlim = c(0,5), ylim = c(0,5), xlab = 'x', ylab = 'y', main = 'plot')
v1 <- c(100,130, 120, 160, 150)
plot (v1, type = 'o', col = 'red',
ylim = c(0,200), axes = FALSE, ann= F)
axis (1, at= 1:5, lab= c ('M', 'T', 'W', 'Th', 'F'))
axis (2, ylim= c(0,200))
title (main = 'FRUIT', col.main='red', font.main=1)
title (xlab = 'Day', col.lab = 'black')
title (ylab = 'price', col.lab= 'blue')
par(mfrow = c(1,3))
plot (v1, type = '0')
plot (v1, type = 'o')
par(mfrow = c(3,1)) # partition -> 한 창에 여러개의 그래프를 넣음 ()
plot (v1, type = 'o')
plot (v1, type = 'o')
plot (v1, type = 's')
plot (v1, type = 'l
par(mfrow = c(1,3)) # partition -> 한 창에 여러개의 그래프를 넣음 -> 일종의 표처럼, c(행의 개수, 열의 개수)
plot (v1, type = 'o')
plot (v1, type = 's')
plot (v1, type = 'l')
par(mfrow = c(1,3)) # partition -> 한 창에 여러개의 그래프를 넣음 -> 일종의 표처럼, c(행의 개수, 열의 개수)
plot (v1, type = 'o')
plot (v1, type = 's')
plot (v1, type = 'l')
pie(v1)
par(mfrow = c(2,3)) # partition -> 한 창에 여러개의 그래프를 넣음 -> 일종의 표처럼, c(행의 개수, 열의 개수)
plot (v1, type = 'o')
plot (v1, type = 'l')
pie(v1)
barplot(v1)
par(mfrow = 1)
par(mfrow = c(1,1))
a <- c(1,2,3)
plot (a, xlab = 'aaa')
plot (a, xlab = 'bbb')
p = par(mgc(0,1,0))
p = par(mgp(0,1,0))
p = par(mgp=c(0,1,0))
par (mgp = c(3,1,0))
par (mgp = c(3,2,0))
p = par(mgp=c(0,1,0)) # mgp = c(제목위치, 지표값 위치, 지표선 위치)
par(mgp=c(0,1,0)) # mgp = c(제목위치, 지표값 위치, 지표선 위치)
par (mgp = c(3,2,0))
par(mgp=c(0,1,0)) # mgp = c(제목위치, 지표값 위치, 지표선 위치)
?mgp
?mgp()
par (mgp = c(3,2,0))
par ('mgp')
par (mgp = c(5,2,0))
par (mgp = c(5,2,4))
par(oma = c(2,1,0,0))
plot (a, xlab = 'aaa')
par(oma = c(2,1,0,0))
plot (a, xlab = 'aaa')
mgp.axis = 5
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
par(mfrow = c(1,1)) #원위치, 1개만 나오도록 하는 것
a <- c(1,2,3)
plot (a, xlab = 'bbb')
par ('mgp')
par(mgp=c(0,1,0)) # mgp = c(제목위치, 지표값 위치, 지표선 위치)
par (mgp = c(5,2,4))
par(oma = c(2,1,0,0))
plot (a, xlab = 'aaa')
par (oma = c (0,2,0,0))
v1 <- c(1,2,3,4,5)
v2 <- c(5,4,3,2,1)
v3 <- c (3,4,5,6,7)
plot (v1, type = 's', col='red',ylim = c(1,5))
par(new = T)
plot (v2, type = 'o', col='blue', ylim=c(1,5))
plot (v3, type = 'o', col='green', ylim=c(1,5))
plot (v3, type = 'i', col='green')
plot (v3, type = 'l', col='green')
v1 <- c(1,2,3,4,5)
v2 <- c(5,4,3,2,1)
v3 <- c(3,4,5,6,7)
plot (v1, type = 's', col='red',ylim = c(1,5))
par(new = T)
plot (v2, type = 'o', col='blue', ylim=c(1,5))
plot (v3, type = 'l', col='green')
v1 <- c(1,2,3,4,5)
v2 <- c(5,4,3,2,1)
v3 <- c(3,4,5,6,7)
plot (v1, type = 's', col='red',ylim = c(1,5))
par(new = T)
plot (v2, type = 'o', col='blue', ylim=c(1,5))
plot (v1, type = 's', col='red',ylim = c(1,5))
par(new = T)
plot (v3, type = 'l', col='green')
par(new = T)
plot (v2, type = 'o', col='blue', ylim=c(1,5))
plot (v3, type = 'l', col='green')
v1 <- c(1,2,3,4,5)
v2 <- c(5,4,3,2,1)
v3 <- c(3,4,5,6,7)
plot (v1, type = 's', col='red',ylim = c(1,5))
par(new = T)
plot (v2, type = 'o', col='blue', ylim=c(1,5))
par(new = T)
plot (v3, type = 'l', col='green')
v1 <- c(1,2,3,4,5)
v2 <- c(5,4,3,2,1)
v3 <- c(3,4,5,6,7)
plot (v1, type = 's', col='red',ylim = c(1,7))
par(new = T)  #par ( new = T) -> new graph is True and it can overwrap
plot (v2, type = 'o', col='blue', ylim=c(1,7))
par(new = T)
plot (v3, type = 'l', col='green', ylim= c(1,7))
legend(4,8, c('v1', 'v2', 'v3'), cex=0.9, col = c('red','blue', 'green'), lty=1)
legend(4,5, c('v1', 'v2', 'v3'), cex=0.9, col = c('red','blue', 'green'), lty=1)
legend(4,5, c('v1', 'v2', 'v3'), cex=0.9, col = c('red','blue', 'green'), lty=1)
#giving legend (범례)
legend(4,10, #위치/크기
c('v1', 'v2', 'v3'),
cex=0.9, col = c('red','blue', 'green'), lty=1)
v1 <- c(1,2,3,4,5)
v2 <- c(5,4,3,2,1)
v3 <- c(3,4,5,6,7) #since v3 has data up to 7, our scale ylim should include that max data
plot (v1, type = 's', col='red',ylim = c(1,10))
par(new = T)  #par ( new = T) -> new graph is True and it can overwrap
plot (v2, type = 'o', col='blue', ylim=c(1,10))
par(new = T)
plot (v3, type = 'l', col='green', ylim= c(1,10))
#giving legend (범례)
legend(4,10, #위치, 크기
c('v1', 'v2', 'v3'), #데이터 종류
cex=0.9, col = c('red','blue', 'green'), lty=1)
################# bar graph
x <- 1:5
barplot(x)
barplot(x, horiz=T)
x <- 1:5
barplot(x)
barplot(x, horiz=T)
x <- matrix(c(5,4,3,2),3,3)
x
x <- matrix(c(5,4,3,2),3,2) #matrix (c(...), a,b) or (c(..), nrow=b)
x <- matrix(c(5,4,3,2),2,2) # matrix (c(...), a,b) or (c(..), nrow=b)
x
x <- matrix(c(5,4,3,2),1,2) # matrix (c(...), a,b) or (c(..), nrow=b)
x
barplot(x, beside = T)
x <- matrix(c(5,4,3,2),1,3) # matrix (c(...), number of rows, number of columns) or (c(..), nrow=b)
x
x <- matrix(c(5,4,3,2),2,2) # matrix (c(...), number of rows, number of columns) or (c(..), nrow=b)
x
barplot(x, beside = T)
barplot(x, beside = T
names = c(5,3), col = c('green', 'yellow'))
barplot(x, beside = T,
names = c(5,3), col = c('green', 'yellow'))
barplot(x, beside = T, # beside = T 같은 그룹내 자료끼리 붙여서 비교
names = c('1번','2번번'),
col = c('green', 'yellow'))
barplot(x, beside = T, # beside = T 같은 그룹내 자료끼리 붙여서 비교
names = c('1번','2번'),  # 각 데이터 그룹의 이름름
col = c('green', 'yellow'))
barplot(x, beside = T,
names = c('1번','2번'),
col = c('green', 'yellow'), horiz = T)
par (oma = c(1,0.5, 1,0.5))
par (oma = c(1,0.5, 10, 0.5))
par (oma = c(1,0.5, 1, 0.5))
barplot(x,
names = c('1번','2번'),
col = c('green', 'yellow'), horiz = T)  # horiz = T : 막대그래프를 옆으로 눞임
par (oma = c(1,5, 1, 0.5)) # 하, 좌, 상, 우 여백 지정
barplot(x,
names = c('1번','2번'),
col = c('green', 'yellow'), horiz = T,
xlim - c(0,10))
barplot(x,
names = c('1번','2번'),
col = c('green', 'yellow'), horiz = T,
xlim - c(0,10))
barplot(x,
names = c('1번','2번'),
col = c('green', 'yellow'), horiz = T,
xlim = c(0,10))
par (oma = c(1,0.1, 1, 0.5)) # 하, 좌, 상, 우 여백 지정
barplot(x,
names = c('1번','2번'),
col = c('green', 'yellow'), horiz = T,
xlim = c(0,10))
par (oma = c(0,0,0,0))
barplot(x, beside = T, # beside = T 같은 그룹내 자료끼리 붙여서 비교
names = c('1번','2번'),  # 각 데이터 그룹의 이름름
col = c('green', 'yellow'))  #그룹내 각 데이터 색깔 지정
barplot(x, beside = T,
names = c('1번','2번'),
col = c('green', 'yellow'), horiz = T)  # horiz = T : 막대그래프를 옆으로 눞임
par (oma = c(1,0.1, 1, 0.5)) # 하, 좌, 상, 우 여백 지정
barplot(x,
names = c('1번','2번'),
col = c('green', 'yellow'), horiz = T,
xlim = c(0,10))
par (oma = c(0,0,0,0))
v1 <- c(100,120,140,160,180)
v2 <- c(120,130,150,140,170)
v3 <- c(140,170,120,110,160)
qty <- data.frame (BANANA=v1, CHERRY = v2, ORANGE = v3)
qty
barplot (as.matrix(qty), main = "Fruit's Sales Qty",
besides = T, col=rainbow(nrow(qty)), ylim = c(0,400))
barplot (as.matrix(qty), main = "Fruit's Sales Qty",
besides = T, col=rainbow(nrow(qty)), ylim = c(0,400))
barplot (as.matrix(qty), main = "Fruit's Sales Qty",
beside = T, col=rainbow(nrow(qty)), ylim = c(0,400))
legend (14,400, c('M','T','W','Th','F'), cex=0.8, fill=rainbow(nrow(qty)))
barplot(t(qty),
main= 'Frutis Sales Qty', ylim=c(0,900),
col = rainbow(length(qty)), space=0.1, cex.axis = 0.8, las=1,
names.arg = c('M','T','W','Th','F'), cex = -.8)
barplot(t(qty),
main= 'Frutis Sales Qty', ylim=c(0,900),
col = rainbow(length(qty)), space=0.1, cex.axis = 0.8, las=1,
names.arg = c('M','T','W','Th','F'), cex = -.8)
barplot(t(qty),
main= 'Frutis Sales Qty', ylim=c(0,900),
col = rainbow(length(qty)), space=0.1, cex.axis = 0.8, las=1,
names.arg = c('M','T','W','Th','F'), cex = 0.8)
legend (0.2, 800, names(qty), cex=0.7, fill= rainbow(length(qty)))
peach <- c(180,200,250, 198, 170)
color <- c(color, 'red')
for (i in 1:length(peach)) {
if (peach[i] >= 200)
color <- c(color, 'red')
else if (peach[i] >= 180)
color <- c(color, 'yellow')
else
color <- c(color, 'green')
}
peach <- c(180,200,250, 198, 170)
color <- c()
for (i in 1:length(peach)) {
if (peach[i] >= 200)
color <- c(color, 'red')
else if (peach[i] >= 180)
color <- c(color, 'yellow')
else
color <- c(color, 'green')
}
color
barplot(peach, main = 'Peach Sales qty',
names.arg = c('M','T','W','Th','F'), col = colors)
barplot(peach, main = 'Peach Sales qty',
names.arg = c('M','T','W','Th','F'), col = color)
peach <- c(180,200,250, 198, 170)
color <- c()
for (i in 1:length(peach)) {
if (peach[i] >= 200)
color <- c(color, 'red')
else if (peach[i] >= 180)
color <- c(color, 'yellow')
else
color <- c(color, 'green')
}
color
barplot(peach, main = 'Peach Sales qty',
names.arg = c('M','T','W','Th','F'), col = color)
height <- c(182,175,167,172,163,178,181,166,159,155)
barplot (height)
hist (height)
par(mfrow=c(1,2))
height
par(mfrow=c(1,2))
height
barplot (height)
hist (height)  #hist -> histogram
par(mfrow=c(1,1))
p1 <- c(10,20,30,40)
pie(p1, radius=1)
pie (p1, radius=1, init.angle= 90)
pie (p1, radius=1, init.angle= 90)
pie(p1, radius=1)
pie (p1, radius=1, init.angle= 90)
col = rainbow(length(p1))
col = rainbow(length(p1))
p1 <- c(10,20,30,40)
pie(p1, radius=1)
pie (p1, radius=1, init.angle= 90, #init.angle -> 시작을 북쪽 90도에서 시작해서 반시계방향으로 돌아감
col = rainbow(length(p1))
pie (p1, radius=1, init.angle= 90, #init.angle -> 시작을 북쪽 90도에서 시작해서 반시계방향으로 돌아감
col = rainbow(length(p1))
pie (p1, radius=1, init.angle= 90, #init.angle -> 시작을 북쪽 90도에서 시작해서 반시계방향으로 돌아감
col = rainbow(length(p1))
pie (p1, radius=1, init.angle= 90, #init.angle -> 시작을 북쪽 90도에서 시작해서 반시계방향으로 돌아감
col = rainbow(length(p1)))
pie (p1, radius=1, init.angle= 90, #init.angle -> 시작을 북쪽 90도에서 시작해서 반시계방향으로 돌아감
col = rainbow(length(p1)))
pie (p1, radius=1, init.angle= 90, #init.angle -> 시작을 북쪽 90도에서 시작해서 반시계방향으로 돌아감
col = rainbow(length(p1)),
label = c('W1', 'W2','W3', 'W4')    )
pct <- round (p1/sum(p1) * 100,1)
lab <- paste(pct, '%')
pct
lab <- paste(pct, '%')
pct
pct <- round (p1/sum(p1) * 100,1)
lab <- paste(pct, '%')
pct
lab
pie (p1, radius=1, init.angle = 90, col= rainbow(length(p1)).
label = lab)
pie (p1, radius=1, init.angle = 90, col= rainbow(length(p1)),
label = lab)
legend (0.85, 1.08, c('wk1', 'wk2', 'wk3','wk4'),
cex=0.5, fill = rainbow (length(p1)))
legend (5, 1.08, c('wk1', 'wk2', 'wk3','wk4'),
cex=0.5, fill = rainbow (length(p1)))
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
legend (0.93, 1.08, c('wk1', 'wk2', 'wk3','wk4'),
cex=0.5, fill = rainbow (length(p1)))
legend (0.93, 6, c('wk1', 'wk2', 'wk3','wk4'),
cex=0.5, fill = rainbow (length(p1)))
lab1 <- c('wk1', 'wk2','wk3', 'wk4')
lab2 <- paste(lab1, '\n', pct, '%')
pie(p1, radius=1, init.angle=90, col = rainbow(length(p1)), label = lab2)
install.packages('plotrix')
library(plotrix)
p1 <- c(10,20,30,40,50)
f_day <- round (p1/sum(p1) * 100,1)
f_label <- paste(f_day, '%')
pie3D (pi, main = '3D Pie Chart', col=rainbow(length(p1)))
pie3D (pi, main = '3D Pie Chart', col=rainbow(length(p1)),
cex = 0.5, labels=f_label, explode = 0.05)
p1 <- c(10,20,30,40,50)
f_day <- round (p1/sum(p1) * 100,1)
f_label <- paste(f_day, '%')
pie3D (pi, main = '3D Pie Chart', col=rainbow(length(p1)),
cex = 0.5, labels=f_label, explode = 0.05)
library(plotrix)
p1 <- c(10,20,30,40,50)
f_day <- round (p1/sum(p1) * 100,1)
f_label <- paste(f_day, '%')
pie3D (pi, main = '3D Pie Chart', col=rainbow(length(p1)),
cex = 0.5, labels=f_label, explode = 0.05)
legend (0.78, 1.14, c('M','T', 'W','Th', 'F'), cex = 0.6, fill=rainbow(p1))
legend (0.78, 1.14, c('M','T', 'W','Th', 'F'), cex = 0.6, fill=rainbow(length(p1)))
pie3D (pi, main = '3D Pie Chart', col=rainbow(length(p1)),
cex = 0.5, labels= f_label, explode = 0.05)
legend (0.78, 1.14, c('M','T', 'W','Th', 'F'), cex = 0.6, fill=rainbow(length(p1)))
pie3D (p1, main = '3D Pie Chart', col=rainbow(length(p1)),
cex = 0.5, labels= f_label, explode = 0.05)
legend (0.78, 1.14, c('M','T', 'W','Th', 'F'), cex = 0.6, fill=rainbow(length(p1)))
v3 <- c(11,20,15,18,13)
v1 <- c(10,12,15,11,20)
v2 <- c(5,7,15,8,9)
v3 <- c(11,20,15,18,13)
boxplot(v1, v2, v3)
boxplot(v1, v2, v3, col = c('blue', 'yellow','pink'),
names=c('blue','yellow', 'pink'),
horizontal = T)
#####################################
install.packages('igraph')
library (igraph)
plot (g1)
g1 <- graph (c (1,2, 2, 3, 2, 4, 1,4, 5, 5, 3,6))
plot (g1)
#####################################
# 관계도  #
par (oma = c(0,0,0,0))
library (igraph)
plot (g1)
g1 <- graph (c (1,2, 2, 3, 2, 4, 1,4, 5, 5, 3,6))
plot (g1)
plot (g1)
print ('mpg')
par ('mpg')
par(mgp=c(0,1,0))
plot (g1)
str(g1)
emp <- data.frame(이름= name, 상사 = pemp)
name <- c('a', 'b', 'c' ,' d' ,'e' ,'f','g')
pemp <- c('a','a', 'b' , 'c','a','f','a')
emp <- data.frame(이름= name, 상사 = pemp)
emp
str(emp)
plot (em)
plot (emp)
g <- graph.data.frame(emp, directed = T)
plot (g.layout= layout.funchterman.reingold,
vertex.size=8, edge.arrow = 0.5)
plot (g.layout= layout.funcherman.reingold,
vertex.size=8, edge.arrow = 0.5)
plot (g.layout= layout.fruchterman.reingold,
vertex.size=8, edge.arrow = 0.5)
plot (g, layout= layout.fruchterman.reingold,
vertex.size=8, edge.arrow = 0.5)
png('graph/network_2.png', width = 600, height= 600)
plot (g, layout= layout.fruchterman.reingold,
vertex.size=8, edge.arrow = 0.5)
png('graph/network_2.png', width = 600, height= 600)
dev.off()
g <- graph.data.frame(emp, directed = F)
plot (g, layout= layout.fruchterman.reingold,
vertex.size=8, edge.arrow = 0.5)
install.packages('devtools')
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
install.packages("plotrix")
library(d3Network)
install.packages('d3Network')
library(d3Network)
